name: CI

on:
  push:
    branches:
      - "master"
      - "dev"
  pull_request:
    branches:
      - "master"
      - "dev"
  schedule:
    # Run a cron job once daily
    - cron: "0 0 * * *"

jobs:
  test:
    name: ${{ matrix.name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: Linux, Python 3.7
            os: ubuntu-latest
            python-version: "3.7"
            conda-installer: https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-Linux-x86_64.sh

          - name: Linux, Python 3.9
            os: ubuntu-latest
            python-version: "3.9"
            conda-installer: https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-Linux-x86_64.sh

          - name: MacOS, Python 3.7
            os: macOS-latest
            python-version: "3.7"
            conda-installer: https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-MacOSX-x86_64.sh

    steps:
      - uses: actions/checkout@v2

      - uses: conda-incubator/setup-miniconda@v2
        with:
          installer-url: ${{ matrix.conda-installer }}
          python-version: ${{ matrix.python-version }}
          activate-environment: test
          channel-priority: true
          environment-file: devtools/conda-envs/env.yaml
          auto-activate-base: false
          use-mamba: true

      - name: Additional info about the build
        shell: bash
        run: |
          uname -a
          df -h
          ulimit -a
      - name: Environment Information
        shell: bash -l {0}
        run: |
          conda info --all
          conda list
          mamba --version
      - name: Install package
        shell: bash -l {0}
        run: |
          python -m pip install --no-deps .
      - name: Run tests
        shell: bash -l {0}
        run: |
          pytest -v --cov=openff/arsenic --cov-report=xml --color=yes openff/arsenic/tests/
      - name: CodeCov
        uses: codecov/codecov-action@v1
        if: always()
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          flags: unittests
          yml: ./.codecov.yml

  lint-format:
    name: Lint & format checks
    runs-on: ubuntu-18.04

    steps:
      - uses: actions/checkout@v2

      - uses: conda-incubator/setup-miniconda@v2
        with:
          installer-url: https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-Linux-x86_64.sh
          python-version: "3.7"
          activate-environment: test
          channel-priority: true
          environment-file: devtools/conda-envs/env.yaml
          auto-activate-base: false
          use-mamba: true

      - name: Additional info about the build
        shell: bash
        run: |
          uname -a
          df -h
          ulimit -a
      - name: Environment Information
        shell: bash -l {0}
        run: |
          conda info --all
          conda list
      - name: Install linter / formatter
        shell: bash -l {0}
        run: |
          mamba install pylint black
      - name: Install package
        shell: bash -l {0}
        run: |
          python -m pip install --no-deps .
      - name: Run pylint
        shell: bash -l {0}
        run: |
          pylint openff/arsenic/ --fail-under 6
      - name: Run black check
        shell: bash -l {0}
        if: always()
        run: |
          black --check -l 99 openff/arsenic/ --exclude openff/arsenic/_version.py
