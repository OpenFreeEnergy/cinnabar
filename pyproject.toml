[build-system]
build-backend = "setuptools.build_meta"

requires = [
    "setuptools>=64",
    "setuptools-scm>=8"
]

[project]
name = "cinnabar"
description = ""
readme = "README.md"
license = { text = "MIT" }
authors = [ { name = "The OpenFE developers", email = "openfe@omsf.io"} ]
requires-python = ">=3.10"

keywords = [ "free energy", "alchemical", "molecular dynamics", "simulation", "analysis" ]

classifiers = [
    "Development Status :: 1 - Planning",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Chemistry",
]
dynamic = [ "version" ]

urls = { Homepage = "https://github.com/OpenFreeEnergy/cinnabar"}
scripts.cinnabar = "cinnabar.cli:main"

[tool.setuptools]
zip-safe = false
include-package-data = true
license-files = [ "LICENSE" ]

[tool.setuptools.packages]
find = { namespaces = false }

[tool.setuptools.package-data]
cinnabar = [ "data/*" ]

[tool.setuptools_scm]
fallback_version = "0.0.0"

[tool.coverage.report]
exclude_lines = [
  'if __name__ == "__main__"',
  "pragma: no cover",
  "pragma: no-cover",
  "-no-cov",
  "raise NotImplementedError",
]


[tool.ruff]
line-length = 120

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
select = [
#    "F",  # Pyflakes
    "I",  # isort
    "W",  # pycodestyle warnings
#    "E",  # pycodestyle errors

]
ignore = [
    "E402",  # module-level import not at top (conflicts w/ isort)
    "E731",  # lambda expressions (TODO: we should fix these)
    "E722",  # bare excepts (TODO: we should fix these in a follow-up PR)
    "F401",  # unused imports (TODO: we should fix these)
    "UP03",  # pyupgrade linting (TODO: we should fix these)
    ]

[tool.ruff.lint.isort]
known-first-party = ["cinnabar"]

[tool.interrogate]
fail-under = 0
ignore-regex = ["^get$", "^mock_.*", ".*BaseClass.*"]
# possible values for verbose: 0 (minimal output), 1 (-v), 2 (-vv)
verbose = 2
color = true
exclude = ["build", "docs"]


[tool.coverage.run]
omit = [
    "cinnabar/_due.py",
]
